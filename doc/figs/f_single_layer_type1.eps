%!PS-Adobe-2.0 EPSF-2.0
%%Title: C:\DOKUME~1\Johannes\LOKALE~1\Temp\jfig-tmp50631.fig
%%Creator: /cygdrive/c/programme/fig2dev/fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Mon Oct 20 08:26:25 2008
%%For: Johannes@PIKKEDIL ()
%%BoundingBox: 0 0 220 223
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.600 0.600 0.600 srgb} bind def
/col33 {0.400 0.400 0.400 srgb} bind def
/col34 {1.000 0.400 0.000 srgb} bind def
/col35 {0.863 0.863 0.863 srgb} bind def

end
save
newpath 0 223 moveto 0 0 lineto 220 0 lineto 220 223 lineto closepath clip newpath
-159.9 516.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% horizontal lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 8 true [ 16 0 0 -8 0 8 ]
	{< ffff000000000000ffff000000000000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P9 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06299 0.06299 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 2550 5874 m 6000 5874 l 6000 6320 l 2550 6320 l
 cp gs /PC [[0.60 0.60 0.60] [0.00 0.00 0.00]] def
15.00 15.00 sc P9 [16 0 0 -8 170.00 391.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3600 6862 m 3636 6862 l 3636 6983 l 3600 6983 l
 cp gs col32 1.00 tnt ef gr gs col0 s gr 
% Polyline
n 2688 7503 m 4207 7503 l 4207 7608 l 2688 7608 l
 cp gs col32 0.80 tnt ef gr gs col0 s gr 
% Polyline
n 4320 7503 m 5861 7503 l 5861 7612 l 4320 7612 l
 cp gs col32 0.10 tnt ef gr gs col0 s gr 
% Polyline
n 3622 5236 m 3574 5239 l 3543 5242 l 3507 5253 l 3467 5270 l 3420 5298 l
 2774 5710 l 2754 5725 l 2741 5740 l 2733 5752 l 2725 5769 l
 2721 5781 l 2717 5795 l 2713 5822 l 2713 5863 l 2713 6362 l
 2713 6397 l 2717 6415 l 2721 6433 l 2725 6453 l 2733 6465 l
 2741 6479 l 2754 6494 l 3487 6941 l 3501 6949 l 3521 6960 l
 3543 6972 l 3580 6983 l 3614 6986 l 3628 6986 l 3627 6955 l
 3627 6907 l 3627 6856 l 3616 6854 l 3602 6851 l 3588 6845 l
 2918 6441 l 2902 6427 l 2894 6415 l 2881 6391 l 2877 6377 l
 2877 5863 l 2877 5848 l 2881 5834 l 2885 5819 l 2894 5804 l
 2902 5790 l 2918 5778 l 3538 5400 l 3566 5385 l 3594 5377 l

 3622 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 3622 5236 m 3650 5239 l 3681 5245 l 3712 5253 l 3735 5262 l 3763 5273 l
 3791 5287 l 4459 5710 l 4480 5725 l 4492 5740 l 4500 5752 l
 4509 5769 l 4513 5781 l 4517 5795 l 4521 5822 l 4521 5863 l
 4521 6362 l 4521 6397 l 4517 6415 l 4513 6433 l 4509 6453 l
 4500 6465 l 4492 6479 l 4480 6494 l 3763 6944 l 3751 6949 l
 3737 6958 l 3723 6966 l 3704 6975 l 3681 6983 l 3639 6986 l
 3628 6986 l 3628 6856 l 3647 6854 l 3656 6851 l 3667 6845 l
 4315 6441 l 4332 6427 l 4340 6415 l 4353 6391 l 4357 6377 l
 4357 5863 l 4357 5848 l 4353 5834 l 4348 5819 l 4340 5804 l
 4332 5790 l 4315 5778 l 3701 5400 l 3678 5388 l 3650 5377 l

 3622 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
gs  clippath
3135 8064 m 3135 8016 l 3032 8016 l 3107 8040 l 3032 8064 l cp
eoclip
n 2790 8040 m
 3120 8040 l gs col32 0.60 tnt ef gr gs col0 s gr gr

% arrowhead
n 3032 8064 m 3107 8040 l 3032 8016 l 3047 8040 l 3032 8064 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2790 7890 m
 2790 8190 l gs col32 0.60 tnt ef gr gs col0 s gr 
% Polyline
gs  clippath
5938 5887 m 5986 5887 l 5986 5784 l 5962 5859 l 5938 5784 l cp
5986 5227 m 5938 5227 l 5938 5330 l 5962 5255 l 5986 5330 l cp
eoclip
n 5962 5242 m
 5962 5872 l gs col32 0.60 tnt ef gr gs col0 s gr gr

% arrowhead
n 5986 5330 m 5962 5255 l 5938 5330 l 5962 5315 l 5986 5330 l 
 cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 5938 5784 m 5962 5859 l 5986 5784 l 5962 5799 l 5938 5784 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4443 5004 m 4443 4956 l 4340 4956 l 4415 4980 l 4340 5004 l cp
2769 4956 m 2769 5004 l 2872 5004 l 2797 4980 l 2872 4956 l cp
eoclip
n 2784 4980 m
 4428 4980 l gs col32 0.60 tnt ef gr gs col0 s gr gr

% arrowhead
n 2872 4956 m 2797 4980 l 2872 5004 l 2857 4980 l 2872 4956 l 
 cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 4340 5004 m 4415 4980 l 4340 4956 l 4355 4980 l 4340 5004 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3619 6862 m 3636 6862 l 3636 6980 l 3619 6980 l
 cp gs col35 1.00 shd ef gr gs col35 s gr 
% Polyline
n 3937 5236 m 3889 5239 l 3858 5242 l 3822 5253 l 3782 5270 l 3735 5298 l
 3089 5710 l 3069 5725 l 3056 5740 l 3048 5752 l 3040 5769 l
 3036 5781 l 3032 5795 l 3028 5822 l 3028 5863 l 3028 6362 l
 3028 6397 l 3032 6415 l 3036 6433 l 3040 6453 l 3048 6465 l
 3056 6479 l 3069 6494 l 3802 6941 l 3816 6949 l 3836 6960 l
 3858 6972 l 3895 6983 l 3929 6986 l 3943 6986 l 3942 6955 l
 3942 6907 l 3942 6856 l 3931 6854 l 3917 6851 l 3903 6845 l
 3233 6441 l 3217 6427 l 3209 6415 l 3196 6391 l 3192 6377 l
 3192 5863 l 3192 5848 l 3196 5834 l 3200 5819 l 3209 5804 l
 3217 5790 l 3233 5778 l 3853 5400 l 3881 5385 l 3909 5377 l

 3937 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 3937 5236 m 3965 5239 l 3996 5245 l 4027 5253 l 4050 5262 l 4078 5273 l
 4106 5287 l 4774 5710 l 4795 5725 l 4807 5740 l 4815 5752 l
 4824 5769 l 4828 5781 l 4832 5795 l 4836 5822 l 4836 5863 l
 4836 6362 l 4836 6397 l 4832 6415 l 4828 6433 l 4824 6453 l
 4815 6465 l 4807 6479 l 4795 6494 l 4078 6944 l 4066 6949 l
 4052 6958 l 4038 6966 l 4019 6975 l 3996 6983 l 3954 6986 l
 3943 6986 l 3943 6856 l 3962 6854 l 3971 6851 l 3982 6845 l
 4630 6441 l 4647 6427 l 4655 6415 l 4668 6391 l 4672 6377 l
 4672 5863 l 4672 5848 l 4668 5834 l 4663 5819 l 4655 5804 l
 4647 5790 l 4630 5778 l 4016 5400 l 3993 5388 l 3965 5377 l

 3937 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 3934 6862 m 3951 6862 l 3951 6980 l 3934 6980 l
 cp gs col35 1.00 shd ef gr gs col35 s gr 
% Polyline
n 4275 5236 m 4227 5239 l 4196 5242 l 4159 5253 l 4120 5270 l 4072 5298 l
 3427 5710 l 3407 5725 l 3394 5740 l 3386 5752 l 3378 5769 l
 3374 5781 l 3370 5795 l 3366 5822 l 3366 5863 l 3366 6362 l
 3366 6397 l 3370 6415 l 3374 6433 l 3378 6453 l 3386 6465 l
 3394 6479 l 3407 6494 l 4139 6941 l 4153 6949 l 4173 6960 l
 4196 6972 l 4232 6983 l 4266 6986 l 4280 6986 l 4280 6955 l
 4280 6907 l 4280 6856 l 4268 6854 l 4254 6851 l 4240 6845 l
 3571 6441 l 3555 6427 l 3547 6415 l 3534 6391 l 3530 6377 l
 3530 5863 l 3530 5848 l 3534 5834 l 3538 5819 l 3547 5804 l
 3555 5790 l 3571 5778 l 4190 5400 l 4218 5385 l 4246 5377 l

 4275 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 4275 5236 m 4303 5239 l 4334 5245 l 4365 5253 l 4387 5262 l 4415 5273 l
 4443 5287 l 5111 5710 l 5132 5725 l 5144 5740 l 5152 5752 l
 5161 5769 l 5165 5781 l 5169 5795 l 5173 5822 l 5173 5863 l
 5173 6362 l 5173 6397 l 5169 6415 l 5165 6433 l 5161 6453 l
 5152 6465 l 5144 6479 l 5132 6494 l 4415 6944 l 4404 6949 l
 4390 6958 l 4376 6966 l 4356 6975 l 4334 6983 l 4291 6986 l
 4280 6986 l 4280 6856 l 4300 6854 l 4308 6851 l 4320 6845 l
 4967 6441 l 4984 6427 l 4992 6415 l 5005 6391 l 5009 6377 l
 5009 5863 l 5009 5848 l 5005 5834 l 5000 5819 l 4992 5804 l
 4984 5790 l 4967 5778 l 4353 5400 l 4331 5388 l 4303 5377 l

 4275 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 4612 5236 m 4640 5239 l 4671 5245 l 4702 5253 l 4725 5262 l 4753 5273 l
 4781 5287 l 5449 5710 l 5470 5725 l 5482 5740 l 5490 5752 l
 5499 5769 l 5503 5781 l 5507 5795 l 5511 5822 l 5511 5863 l
 5511 6362 l 5511 6397 l 5507 6415 l 5503 6433 l 5499 6453 l
 5490 6465 l 5482 6479 l 5470 6494 l 4753 6944 l 4741 6949 l
 4727 6958 l 4713 6966 l 4694 6975 l 4671 6983 l 4629 6986 l
 4618 6986 l 4618 6856 l 4637 6854 l 4646 6851 l 4657 6845 l
 5305 6441 l 5322 6427 l 5330 6415 l 5343 6391 l 5347 6377 l
 5347 5863 l 5347 5848 l 5343 5834 l 5338 5819 l 5330 5804 l
 5322 5790 l 5305 5778 l 4691 5400 l 4668 5388 l 4640 5377 l

 4612 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 4272 6862 m 4289 6862 l 4289 6980 l 4272 6980 l
 cp gs col35 1.00 shd ef gr gs col35 s gr 
% Polyline
n 4612 5236 m 4564 5239 l 4533 5242 l 4497 5253 l 4457 5270 l 4410 5298 l
 3764 5710 l 3744 5725 l 3731 5740 l 3723 5752 l 3715 5769 l
 3711 5781 l 3707 5795 l 3703 5822 l 3703 5863 l 3703 6362 l
 3703 6397 l 3707 6415 l 3711 6433 l 3715 6453 l 3723 6465 l
 3731 6479 l 3744 6494 l 4477 6941 l 4491 6949 l 4511 6960 l
 4533 6972 l 4570 6983 l 4604 6986 l 4618 6986 l 4617 6955 l
 4617 6907 l 4617 6856 l 4606 6854 l 4592 6851 l 4578 6845 l
 3908 6441 l 3892 6427 l 3884 6415 l 3871 6391 l 3867 6377 l
 3867 5863 l 3867 5848 l 3871 5834 l 3875 5819 l 3884 5804 l
 3892 5790 l 3908 5778 l 4528 5400 l 4556 5385 l 4584 5377 l

 4612 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 4927 5236 m 4955 5239 l 4986 5245 l 5017 5253 l 5040 5262 l 5068 5273 l
 5096 5287 l 5764 5710 l 5785 5725 l 5797 5740 l 5805 5752 l
 5814 5769 l 5818 5781 l 5822 5795 l 5826 5822 l 5826 5863 l
 5826 6362 l 5826 6397 l 5822 6415 l 5818 6433 l 5814 6453 l
 5805 6465 l 5797 6479 l 5785 6494 l 5068 6944 l 5056 6949 l
 5042 6958 l 5028 6966 l 5009 6975 l 4986 6983 l 4944 6986 l
 4933 6986 l 4933 6856 l 4952 6854 l 4961 6851 l 4972 6845 l
 5620 6441 l 5637 6427 l 5645 6415 l 5658 6391 l 5662 6377 l
 5662 5863 l 5662 5848 l 5658 5834 l 5653 5819 l 5645 5804 l
 5637 5790 l 5620 5778 l 5006 5400 l 4983 5388 l 4955 5377 l

 4927 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 4927 5236 m 4879 5239 l 4848 5242 l 4812 5253 l 4772 5270 l 4725 5298 l
 4079 5710 l 4059 5725 l 4046 5740 l 4038 5752 l 4030 5769 l
 4026 5781 l 4022 5795 l 4018 5822 l 4018 5863 l 4018 6362 l
 4018 6397 l 4022 6415 l 4026 6433 l 4030 6453 l 4038 6465 l
 4046 6479 l 4059 6494 l 4792 6941 l 4806 6949 l 4826 6960 l
 4848 6972 l 4885 6983 l 4919 6986 l 4933 6986 l 4932 6955 l
 4932 6907 l 4932 6856 l 4921 6854 l 4907 6851 l 4893 6845 l
 4223 6441 l 4207 6427 l 4199 6415 l 4186 6391 l 4182 6377 l
 4182 5863 l 4182 5848 l 4186 5834 l 4190 5819 l 4199 5804 l
 4207 5790 l 4223 5778 l 4843 5400 l 4871 5385 l 4899 5377 l

 4927 5371 l gs col32 0.70 tnt ef gr gs col0 s gr 
% Polyline
n 2553 7458 m 2553 7807 l 6007 7807 l 6007 7458 l 5838 7458 l 5838 7593 l
 5670 7593 l 5670 7458 l 5512 7458 l 5512 7593 l 5343 7593 l
 5343 7458 l 5175 7458 l 5175 7593 l 5017 7593 l 5017 7458 l
 4848 7458 l 4848 7593 l 4691 7593 l 4691 7458 l 4522 7458 l
 4522 7593 l 4353 7593 l 4353 7458 l 4185 7458 l 4185 7593 l
 4027 7593 l 4027 7458 l 3858 7458 l 3858 7593 l 3701 7593 l
 3701 7458 l 3532 7458 l 3532 7593 l 3375 7593 l 3375 7458 l
 3206 7458 l 3206 7593 l 3037 7593 l 3037 7458 l 2868 7458 l
 2868 7593 l 2711 7593 l 2711 7458 l
 2550 7458 l gs col32 0.60 tnt ef gr gs col0 s gr 
% Polyline
n 4609 6862 m 4626 6862 l 4626 6980 l 4609 6980 l
 cp gs col35 1.00 shd ef gr gs col35 s gr 
/Times-Roman ff 150.00 scf sf
3285 4904 m
gs 1 -1 sc (t01) col0 sh gr
% Polyline
n 5040 5242 m
 6007 5242 l gs col32 0.90 tnt ef gr gs col0 s gr 
% Polyline
n 4924 6862 m 4941 6862 l 4941 6980 l 4924 6980 l
 cp gs col35 1.00 shd ef gr gs col35 s gr 
/Times-Roman ff 165.00 scf sf
3165 8084 m
gs 1 -1 sc (t11) col0 sh gr
/Times-Roman ff 165.00 scf sf
4387 7762 m
gs 1 -1 sc (t10) col0 sh gr
/Times-Roman ff 165.00 scf sf
4050 7762 m
gs 1 -1 sc (t09) col0 sh gr
/Times-Roman ff 165.00 scf sf
3397 7762 m
gs 1 -1 sc (t07) col0 sh gr
/Times-Roman ff 165.00 scf sf
3735 7762 m
gs 1 -1 sc (t08) col0 sh gr
/Times-Roman ff 165.00 scf sf
3060 7762 m
gs 1 -1 sc (t06) col0 sh gr
/Times-Roman ff 165.00 scf sf
2745 7762 m
gs 1 -1 sc (t05) col0 sh gr
/Times-Roman ff 150.00 scf sf
5580 5197 m
gs 1 -1 sc (t02) col0 sh gr
% Ellipse
n 4426 7548 22 22 0 360 DrawEllipse gs col32 0.00 shd ef gr gs col0 s gr

% Polyline
n 2801 7548 m
 4421 7548 l gs col32 0.00 shd ef gr gs col0 s gr 
% Ellipse
n 2784 7548 22 22 0 360 DrawEllipse gs col32 0.00 shd ef gr gs col0 s gr

% Polyline
n 2790 5872 m
 2790 4950 l gs col32 0.90 tnt ef gr gs col0 s gr 
% Polyline
n 4432 5872 m
 4432 4950 l gs col32 0.90 tnt ef gr gs col0 s gr 
$F2psEnd
rs
end
